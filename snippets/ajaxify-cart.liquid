<script>
if ((typeof Shopify) === 'undefined') { window.Shopify = {}; }
  // Get from cart.js returns the cart in JSON
  if ((typeof Shopify.getCart) === 'undefined') {
    Shopify.getCart = function(callback, cart) {
      if (cart && (typeof callback) === 'function') {
        callback(cart);
        return;
      }
      jQuery.getJSON('/cart.js', function (cart, textStatus) {
        if ((typeof callback) === 'function') {
          callback(cart);
        }else if(Array.isArray(callback)){
          for(i=0; i<callback.length; i++){
            if(typeof callback[i] ==='function'){
              callback[i](cart);
            }
          }
        }else if(typeof Shopify.onCartUpdate==='function'){
          Shopify.onCartUpdate(cart);
        }
      });
    };
  }
/**
 * Module to ajaxify all add to cart forms on the page.
 *
 * Copyright (c) 2015 Caroline Schnapp (11heavens.com)
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 */
Shopify.AjaxifyCart = (function($) {
  
  // Some configuration options.
  // I have separated what you will never need to change from what
  // you might change.
  
  var _config = {
    
    // What you might want to change
    addToCartBtnLabel:             'Add To cart',
    addedToCartBtnLabel:           'Thank you!',
    addingToCartBtnLabel:          'Adding...',
    soldOutBtnLabel:               'Sold Out',
    howLongTillBtnReturnsToNormal: 1000, // in milliseconds.
    cartCountSelector:             '.cart-count, #cart-count a:first, #gocart p a, #cart .checkout em, .item-count',
    cartTotalSelector:             '#cart-price',
    // 'aboveForm' for top of add to cart form,
    // 'belowForm' for below the add to cart form, and 
    // 'nextButton' for next to add to cart button.
    feedbackPosition:              'nextButton',
    
    // What you will never need to change
    addToCartBtnSelector:          '.the-cart-btn',
    addToCartFormSelector:         'form[action="/cart/add"]',
    shopifyAjaxAddURL:             '/cart/add.js',
    shopifyAjaxCartURL:            '/cart.js',
    addedsucess:          '.added-cart'
  };
  
   var col = '{{template}}';
   
  // We need some feedback when adding an item to the cart.
  // Here it is.  
  var _showFeedback = function(success, html, $addToCartForm) {
//     $('.ajaxified-cart-feedback').remove();
    var feedback = '<p class="ajaxified-cart-feedback ' + success + '">' + html + '</p>';
    //console.log($addToCartForm.find(_config.addedsucess).after(feedback));
    if(col === 'collection') {
    	$addToCartForm.find(_config.addedsucess).html(feedback);
    } else {
      switch (_config.feedbackPosition) {
        case 'aboveForm':
          $addToCartForm.before(feedback);
          break;
        case 'belowForm':
          $addToCartForm.after(feedback);
          break;
        case 'nextButton':
        default:
          $addToCartForm.find(_config.addToCartBtnSelector).after(feedback);
          break;   
      }
    }
    // If you use animate.css
    // $('.ajaxified-cart-feedback').addClass('animated bounceInDown');
    $('.ajaxified-cart-feedback').slideDown();
    $('.my__custom_cart_drawer').addClass('drawer__open');
    $('body').addClass('body_drawer__open');
  };
  var _setText = function($button, label) {
    if ($button.children().length) {
      $button.children().each(function() {
        if ($.trim($(this).text()) !== '') {
          $(this).text(label);
        }
      });
    }
    else {
      $button.val(label).text(label);
    }
  };
 
  var _init = function() {   
    $(document).ready(function() { 
      $(_config.addToCartFormSelector).submit(function(e) {
        e.preventDefault();
        var $addToCartForm = $(this);
        var $addToCartBtn = $addToCartForm.find(_config.addToCartBtnSelector);
        var $da_selector = $('.the-cart-btn');
        _setText($addToCartBtn, _config.addingToCartBtnLabel);
        $addToCartBtn.addClass('disabled').prop('disabled', true);
        // Add to cart.
        $.ajax({
          url: _config.shopifyAjaxAddURL,
          dataType: 'json',
          type: 'post',
          data: $addToCartForm.serialize(),
          success: function(itemData) {
            // Re-enable add to cart button.
            
             // console.log(itemData);
          
            if(col === 'collection'){
              //$addToCartBtn.addClass('inverted');
              _showFeedback('success','<i class="fa fa-check"></i>',$addToCartForm);
             // $addToCartBtn.addClass('chekeds');
            } else {
//               $da_selector.removeClass('hide');
              $addToCartBtn.addClass('hide');
              _setText($addToCartBtn, _config.addedToCartBtnLabel);
              _showFeedback('success','<a href="/cart" class="grid-cart-btn"><span class="view-cart">View Cart</span></a>',$addToCartForm);
            }
            
            window.setTimeout(function(){
              $addToCartBtn.prop('disabled', false).removeClass('disabled').removeClass('inverted');
              _setText($addToCartBtn,_config.addToCartBtnLabel);
            }, _config.howLongTillBtnReturnsToNormal);
            // Update cart count and show cart link.
            Shopify.getCart(function(cart) {
              //Bold: Ensure the cart's line items have been updated with their option information
              if(typeof(BOLD) === 'object' && BOLD.helpers && typeof(BOLD.helpers.cleanCart) === 'function' )
                cart = BOLD.helpers.cleanCart(cart);

//               console.log(cart.total_price+"cart");
              var ht ="";
               $(cart.items).each(function(i,e) {     
//                  console.log(i+'e'+e.id);
//ht += '<div class="the__cart_item">';
 //  ht += '<div class="the__cart_item_img"><img src="'+e.image +'" alt="'+e.title + +e.formatted_recurring_desc+'"></div>';
 //   ht +='<div class="the__cart_item_info">';
 //    ht += '<div class="cart__item_title"><a href="'+e.url+'" class="p">'+e.title+'</a></div>';
 //     ht +='<div class="cart__item_variant"></div>';
 //    ht += '<div class="cart__item_qty"></div>';
  //   ht += '<div class="cart__item_price"></div>';
  //  ht +='</div>';
 //   ht +='<div class="cart__item_remover"></div>';
 //ht += '</div>';



 ht += '<div class="the__cart_item">';
  ht +=   '<div class="the__cart_item_img">';
  ht +=   '<img src="'+e.image +'" alt="'+e.title + +e.formatted_recurring_desc+'">';
 ht +=    '</div>';
 ht +=   '<div class="the__cart_item_info">';
  ht +=     '<div class="cart__item_title">'+e.product_title+'</div>';
//   ht +=     '<div class="cart__item_variant">'+e.variant_title+'</div>';
   ht +=    '<div class="cart__item_qty"><button class="minus-btn" type="button" name="button"><i class="fa fa-minus"></i></button>';
   ht +=    '<input type="number"  class="cart__quantity-selector mob-cart-qty-change elite-cart-quantity" name="updates['+e.id+']" data-id="'+e.id+'" id="updates_'+e.key+'" value="'+e.quantity +'" min="1" />';
   ht +=    '<button class="plus-btn" type="button" name="button"><i class="fa fa-plus"></i></button></div>';
   ht +=    '<div class="cart__item_price">';
  ht +=     '<span class="saso-cart-item-price desk-price-ajax-change" data-key="'+e.key+'" data-id="'+e.id+'">$'+ ((e.final_line_price * 0.01).toFixed(2)) +'</span>';
  ht +=     '</div>';
  ht +=   '</div>';
   ht +=  '<div class="cart__item_remover">';
   ht +=    '<a href="#" class="cart__remove es-remove-pro" data-id="'+e.id+'">';
   ht +=      'Remove';
  ht +=     '</a>';
  ht +=   '</div>';
  ht += '</div>';








         //      ht += '<div class="cart-hover__row" id="'+e.id+'"><div class="grid--full"><div class="grid__item three-tenths"><img src="'+e.image +'" alt="'+e.title + +e.formatted_recurring_desc+'"></div><div class="grid__item six-tenths text-left"><a href="'+e.url+'" class="p">'+e.title+'</a>';
            //    ht += '<p><span class="qtn" >'+e.quantity +' </span> X <span> $'+ ((e.price * 0.01).toFixed(2)) +'</span></p></div>';
            //     ht += '<div class="grid__item one-tenth"><a href="/cart/change?id='+e.id+'quantity=0" class="cart__remove_head" data-id="'+e.id+'" ><i class="fa fa-trash" aria-hidden="true"></i></a></div></div></div>';
               });
               $('.my__custom_cart_drawer').removeClass('no_item');
               $('.the_cart_title').html(cart.item_count + ' ITEM IN YOUR CART');
               $('.the_ajax_item_wrapper').html(ht);
               drawer_scroll();
               $('#CartCount').html(cart.item_count);
               
              $('.the_cart_total_amount').html("$" + (cart.total_price*0.01).toFixed(2));
              
               $('.cart__remove_head').click( function(){
                  var href= $(this).attr('href');
                  var id = $(this).attr('data-id');
                  var idd="";
                 $.ajax({
                      url: '/cart/change.js?id='+id+'&amp;quantity=0' ,
                      dataType: 'json',
                      type: 'post',
                      success: function(itemData) {
                        $('#cart_drop_item').find('.rw').each(function() {
                          idd = $( this ).attr( "id" );
                          if(idd == id ){
                            $('div#'+idd).html("");
                            $('.cart-count').html( itemData.item_count );
                            $('.subtotal').html("Â£" +(itemData.total_price*0.01).toFixed(2));
                          } 
                        });
                      }
                 });
                return false;
              });


              $('.minus-btn').on('click', function(e) {
    		e.preventDefault();
    		var $this = $(this);
    		var $input = $this.closest('div').find('input');
    		var value = parseInt($input.val());

    		if (value > 1) {
    			value = value - 1;
    		} else {
    			value = 0;
    		}

        $input.val(value);
           change_qty($input);
   

    	});
    	$('.plus-btn').on('click', function(e) {
         
          console.log('aaaa');
    		e.preventDefault();
    		var $this = $(this);
    		var $input = $this.closest('div').find('input');
    		var value = parseInt($input.val());

    		if (value < 100) {
      		value = value + 1;
    		} else {
    			value =100;
    		}

    		$input.val(value);
          
          change_qty($input);
    	});

      function change_qty($input){
        var variant_id= $($input).attr("data-id");
        var quantity= $($input).val();
        
        var data = { updates: {} };
        data.updates[variant_id] = quantity;
        console.log(data);
        jQuery.ajax({
          type: 'POST',
          url: '/cart/update.js',
          data: data,
          dataType: 'json',
          success: function(res) { 
            var pro_data = res.items;
            
            console.log(pro_data);
            var price = res.total_price ;
            price = price/100;
            var tot_qty = res.item_count;
            $('.new-cart-sidebar #bk-cart-subtotal-price').html('$' + price.toFixed(2));
            $('.the_cart_total_amount').html('$' + price.toFixed(2));
            $('.new-cart-sidebar .es-subtotal-text').html('Subtotal ( '+tot_qty+' Products):');
            $('#CartCount').html(tot_qty);
            
            jQuery.each(pro_data, function(index, item) {
              var spe_price=item.final_line_price;
              spe_price= spe_price/100;
              if(item.id == variant_id){
                $('.saso-cart-item-price.desk-price-ajax-change[data-id='+item.id+']').html('$' + spe_price.toFixed(2));
                $('.saso-cart-item-price.mob-price-ajax-change[data-id='+item.id+']').html('$' + spe_price.toFixed(2));
              
              }
            });
            
          }
        });
      };
              
              
              if (_config.cartCountSelector && $(_config.cartCountSelector).size()) {
                var value = $(_config.cartCountSelector).html() || '0';
                $(_config.cartCountSelector).html(value.replace(/[0-9]+/,cart.item_count)).removeClass('hidden-count');
                //setInterval($('.cart-icon').trigger($(".cart_item").toggle()),1000);        
                if($('.cart_item').css('display') == 'none'){
                  $(".cart_item").hide();
                }else{
                   $(".cart_item").show();
                }
               }
              if (_config.cartTotalSelector && $(_config.cartTotalSelector).size()) {
                if (typeof Currency !== 'undefined' && typeof Currency.moneyFormats !== 'undefined') {
                  var newCurrency = '';
                  if ($('[name="currencies"]').size()) {
                    newCurrency = $('[name="currencies"]').val();
                  }
                  else if ($('#currencies span.selected').size()) {
                    newCurrency = $('#currencies span.selected').attr('data-currency');
                  }
                  if (newCurrency) {
                    $(_config.cartTotalSelector).html('<span class=money>' + Shopify.formatMoney(Currency.convert(cart.total_price, "{{ shop.currency }}", newCurrency), Currency.money_format[newCurrency]) + '</span>');
                  } 
                  else {
                    $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                  }
                }
                else {
                  $(_config.cartTotalSelector).html(Shopify.formatMoney(cart.total_price, "{{ shop.money_format | remove: "'" | remove: '"' }}"));
                }
              };
            });    
                                                    
          }, 
          error: function(XMLHttpRequest) {
            var response = eval('(' + XMLHttpRequest.responseText + ')');
            response = response.description;
            if (response.slice(0,4) === 'All ') {
              _showFeedback('error', response.replace('All 1 ', 'All '), $addToCartForm);
              $addToCartBtn.prop('disabled', false);
              _setText($addToCartBtn, _config.soldOutBtnLabel);
              $addToCartBtn.prop('disabled',true);
            }
            else {
              _showFeedback('error', '<i class="fa fa-warning"></i> ' + response, $addToCartForm);
              $addToCartBtn.prop('disabled', false).removeClass('disabled');
              _setText($addToCartBtn, _config.addToCartBtnLabel);
            }
          }
        });   
        return false;    
      });
    });
  };
  return {
    init: function(params) {
        // Configuration
        params = params || {};
        // Merging with defaults.
        $.extend(_config, params);
        // Action
        $(function() {
          _init();
        });
    },    
    getConfig: function() {
      return _config;
    }
  }  
})(jQuery);

Shopify.AjaxifyCart.init();

</script>

{% comment %}
  If you want to animate your feedback message.
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.0/animate.min.css' | stylesheet_tag }}
{% endcomment %}

{% comment %}
{{ '//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css' | stylesheet_tag }}
{% endcomment %}

<style>
.ajaxified-cart-feedback {
  display: block;
  line-height: 36px;
  font-size: 90%;
  vertical-align: middle;
}
.ajaxified-cart-feedback.success { 
  color: #3D9970;
}
.ajaxified-cart-feedback.error { 
  color: #FF4136; 
} 
.ajaxified-cart-feedback a {
  border-bottom: 1px solid;
}
.ajaxified-cart-feedback.success a.viewcart {
    width: 100%;
    font-weight: bold;
    background: none 0% 0% / auto repeat scroll padding-box border-box rgb(46, 167, 9) !important;
    border-radius: 0;
    line-height: 1.7;
    border: 0;
    color: #fff;
    font-size: 25px;
    display: inline-block;
    padding: 12px 24px;
    margin: 0;
    text-transform: uppercase;
    line-height: 1.42;
    text-decoration: none;
    text-align: center;
    vertical-align: middle;
    white-space: nowrap;
    cursor: pointer;
}
</style>